plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

version = "2.1.0"
group = project.mod_id

base {
	archivesName = project.mod_id
}

repositories {	
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"mod_id" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
	
	runs {
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=${mod_id}"
 
			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	
	modImplementation "net.fabricmc:fabric-loader:${project.fabric_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.api_version}"
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications.register("mavenJava", MavenPublication) {
		from components.java
	}
}
